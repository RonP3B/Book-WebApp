{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 3,
    "pending": 0,
    "failures": 1,
    "start": "2022-12-01T17:27:34.618Z",
    "end": "2022-12-01T17:28:03.228Z",
    "duration": 28610,
    "testsRegistered": 4,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "44ff2ff1-92b7-438c-86b9-eef7ecb39e49",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4c9b36ac-6cc2-4ad3-9058-730eac6d154b",
          "title": "Mantenimiento de libros",
          "fullFile": "C:\\Users\\USER\\OneDrive - Instituto Tecnológico de Las Américas (ITLA)\\Itla\\C6-2022\\Programación Web\\BookApp\\tests\\testBook.js",
          "file": "\\tests\\testBook.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Mantenimiento de libros\"",
              "fullTitle": "Mantenimiento de libros \"before all\" hook in \"Mantenimiento de libros\"",
              "timedOut": false,
              "duration": 32,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new Builder().forBrowser(\"chrome\").build();\ndriver.manage().setTimeouts({ implicit: 20000, pageLoad: 10000 });",
              "err": {},
              "uuid": "3573b969-e49a-4fca-8224-adc124dc1e5b",
              "parentUUID": "4c9b36ac-6cc2-4ad3-9058-730eac6d154b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Mantenimiento de libros\"",
              "fullTitle": "Mantenimiento de libros \"after all\" hook in \"Mantenimiento de libros\"",
              "timedOut": false,
              "duration": 468,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit()",
              "err": {},
              "uuid": "a07db21c-cd84-4011-9ee1-b7bb666e5deb",
              "parentUUID": "4c9b36ac-6cc2-4ad3-9058-730eac6d154b",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Mantenimiento de libros\"",
              "fullTitle": "Mantenimiento de libros \"after each\" hook in \"Mantenimiento de libros\"",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const imgFileName = `${this.currentTest.title}.jpg`;\nsaveScreenshot(driver, imgFileName);\naddContext(this, `../report/screenshots/${imgFileName}`);",
              "err": {},
              "uuid": "66835b86-5b49-4dd1-a6cf-f971caa00e57",
              "parentUUID": "4c9b36ac-6cc2-4ad3-9058-730eac6d154b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Creación de libro",
              "fullTitle": "Mantenimiento de libros Creación de libro",
              "timedOut": false,
              "duration": 12246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"../report/screenshots/Creación de libro.jpg\"",
              "code": "await driver.get(\"http://localhost:5000/admin-books/add\");\nconst locators = await locateFormInputs();\nawait locators.img.sendKeys(testImgPath);\nawait locators.title.sendKeys(\"1984\");\nawait locators.pusblishYear.sendKeys(\"1992\");\nawait new Select(locators.category).selectByVisibleText(\"Acción\");\nawait new Select(locators.author).selectByVisibleText(\"George Orwell\");\nawait new Select(locators.editorial).selectByVisibleText(\"Famas Inc\");\n//await locators.form.submit();\nrequest(app)\n  .post(\"/admin-books/add\")\n  .send({ title: \"comapi\" })\n  .end(function (e, res) {\n    console.log(res.body);\n  });\nassert.strictEqual(\"a\", \"a\");",
              "err": {},
              "uuid": "fcf158eb-f3c0-497a-a14e-87ff37d5fc12",
              "parentUUID": "4c9b36ac-6cc2-4ad3-9058-730eac6d154b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fcf158eb-f3c0-497a-a14e-87ff37d5fc12"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12246,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "937a41ea-6c1c-40df-9664-84d9c4b649a4",
          "title": "Filtrar libros",
          "fullFile": "C:\\Users\\USER\\OneDrive - Instituto Tecnológico de Las Américas (ITLA)\\Itla\\C6-2022\\Programación Web\\BookApp\\tests\\testFilter.js",
          "file": "\\tests\\testFilter.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Filtrar libros\"",
              "fullTitle": "Filtrar libros \"before all\" hook in \"Filtrar libros\"",
              "timedOut": false,
              "duration": 28,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new Builder().forBrowser(\"chrome\").build();\ndriver.manage().setTimeouts({ implicit: 20000, pageLoad: 10000 });",
              "err": {},
              "uuid": "d9f3ea83-4da3-4ecb-b272-8bc0cd64dfcc",
              "parentUUID": "937a41ea-6c1c-40df-9664-84d9c4b649a4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Filtrar libros\"",
              "fullTitle": "Filtrar libros \"after all\" hook in \"Filtrar libros\"",
              "timedOut": false,
              "duration": 937,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit()",
              "err": {},
              "uuid": "8bbb4962-c49b-41c3-91de-c864fd2cf1b5",
              "parentUUID": "937a41ea-6c1c-40df-9664-84d9c4b649a4",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Filtrar libros\"",
              "fullTitle": "Filtrar libros \"after each\" hook in \"Filtrar libros\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const imgFileName = `${this.currentTest.title}.jpg`;\nsaveScreenshot(driver, imgFileName);\naddContext(this, `../report/screenshots/${imgFileName}`);",
              "err": {},
              "uuid": "07587b87-34af-4abf-8a8a-4ba4fd40f991",
              "parentUUID": "937a41ea-6c1c-40df-9664-84d9c4b649a4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Filtrar libros por titulo",
              "fullTitle": "Filtrar libros Filtrar libros por titulo",
              "timedOut": false,
              "duration": 9009,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"../report/screenshots/Filtrar libros por titulo.jpg\"",
              "code": "await driver.get(\"http://localhost:5000\");\nconst btnFilterMenu = await driver.findElement(By.id(\"filter-option\"));\nconst inputTitle = await driver.findElement(By.name(\"title\"));\nawait btnFilterMenu.click();\nawait inputTitle.sendKeys(\"Libro Prueba #2\", Key.RETURN);\nconst filteredBook = await driver\n  .findElement(By.css(\".book__info h4\"))\n  .getText();\nassert.strictEqual(filteredBook, \"Libro Prueba #2\");",
              "err": {},
              "uuid": "1cb1570a-b754-4072-b37c-07040970b9f8",
              "parentUUID": "937a41ea-6c1c-40df-9664-84d9c4b649a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filtrar libros por categoría",
              "fullTitle": "Filtrar libros Filtrar libros por categoría",
              "timedOut": false,
              "duration": 2247,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "\"../report/screenshots/Filtrar libros por categoría.jpg\"",
              "code": "await driver.get(\"http://localhost:5000\");\nconst btnFilterMenu = await driver.findElement(By.id(\"filter-option\"));\nconst dramaLabel = await driver.findElement(\n  By.css('label[for=\"8dcdaa44-6207-4ba3-81b7-3fa3b66ba8ab\"]')\n);\nconst btnFilter = await driver.findElement(By.id(\"btn-filter\"));\nawait btnFilterMenu.click();\nawait dramaLabel.click();\nawait btnFilter.click();\nconst filteredBook = await driver\n  .findElement(By.css(\".book__info h4\"))\n  .getText();\nassert.strictEqual(filteredBook, \"Libro Prueba #3\");",
              "err": {
                "message": "AssertionError: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'Libro Prueba #1'\n- 'Libro Prueba #3'\n                 ^",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'Libro Prueba #1'\n- 'Libro Prueba #3'\n                 ^\n    at Context.<anonymous> (tests\\testFilter.js:56:12)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- Libro Prueba #1\n+ Libro Prueba #3\n"
              },
              "uuid": "fb32dcb9-fafa-435b-b1d4-b2c43f037430",
              "parentUUID": "937a41ea-6c1c-40df-9664-84d9c4b649a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filtrar libros por titulo y categoría",
              "fullTitle": "Filtrar libros Filtrar libros por titulo y categoría",
              "timedOut": false,
              "duration": 3020,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"../report/screenshots/Filtrar libros por titulo y categoría.jpg\"",
              "code": "await driver.get(\"http://localhost:5000\");\nconst btnFilterMenu = await driver.findElement(By.id(\"filter-option\"));\nconst inputTitle = await driver.findElement(By.name(\"title\"));\nconst dramaLabel = await driver.findElement(\n  By.css('label[for=\"42680868-f21e-4df9-90da-7452167b9e4b\"]')\n);\nawait btnFilterMenu.click();\nawait dramaLabel.click();\nawait inputTitle.sendKeys(\"Libro Prueba #4\", Key.RETURN);\nconst filteredBook = await driver\n  .findElement(By.css(\".book__info h4\"))\n  .getText();\nassert.strictEqual(filteredBook, \"Libro Prueba #4\");",
              "err": {},
              "uuid": "36af1662-3a58-44eb-b135-f3ed8a28ccb4",
              "parentUUID": "937a41ea-6c1c-40df-9664-84d9c4b649a4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1cb1570a-b754-4072-b37c-07040970b9f8",
            "36af1662-3a58-44eb-b135-f3ed8a28ccb4"
          ],
          "failures": [
            "fb32dcb9-fafa-435b-b1d4-b2c43f037430"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14276,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "seleniumTestReport",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "./report",
        "reportFilename": "seleniumTestReport"
      },
      "version": "6.2.0"
    }
  }
}